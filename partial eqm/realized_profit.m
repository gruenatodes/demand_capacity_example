function [profits, labor, prod, capital_util] = realized_profit(b_draws, k, pr, z, p, agg)
% Note: capital_util is absolute capital utilized k~, not capital
% utilization rate k~/k.

big_brackets = ( ((2 - 2 * p.alpha) / p.alpha) ^ (p.alpha / (2 - p.alpha)) + ...
                (p.alpha / (2 - 2 * p.alpha)) ^ ((2 - 2 * p.alpha) / (2 - p.alpha)) );
            
b_bar = pr ^ ((2 - p.alpha + p.alpha * p.sigma) / p.alpha) * ...
              agg.w ^ ( -(2 - 2 * p.alpha) / p.alpha ) * ...
              z ^ (2 / p.alpha) * ...
              k / p.chi * ...
              1 / ( agg.P ^ (p.sigma - 1) * agg.Y ) * ...
              ( (2 - p.alpha) / 2) ^ ((2 - p.alpha) / p.alpha) * ...
              big_brackets ^ (- (2 - p.alpha) / p.alpha);
lo_ind = b_draws < b_bar;
hi_ind = b_draws > b_bar;
b_draws_lo = b_draws(lo_ind);

% profits:
profits_lo = b_draws_lo .* ((agg.P / pr) ^ (p.sigma - 1) * agg.Y) - ...
        b_draws_lo .^ (2 / (2 - p.alpha)) .* ...
            ( agg.w ^ ( (2 - 2 * p.alpha) / (2 - p.alpha)) * ...
            ( agg.P ^ (p.sigma - 1) * agg.Y / (z * pr ^ p.sigma) ) ^ ...
                ( 2 / (2 - p.alpha) ) * ...
            (p.chi / k) ^ ( p.alpha / (2 - p.alpha) ) * ...
            big_brackets );
profits_hi = (pr * z) ^ (2 / p.alpha) * ...
            agg.w ^ ( -(2 - 2 * p.alpha) / p.alpha) * ...
            k / p.chi * ...
            big_brackets ^ ( -(2 - p.alpha) / p.alpha ) * ...
            ((2 - p.alpha) / 2) ^ (2 / p.alpha) * p.alpha / (2 - p.alpha);
profits(lo_ind) = profits_lo;
profits(hi_ind) = profits_hi;

% production:
prod_lo = b_draws_lo * ( agg.P ^ (p.sigma - 1) * agg.Y / (pr ^ p.sigma) );
prod_hi = pr ^ ( (2 - p.alpha) / p.alpha) * ...
        z ^ (2 / p.alpha) * ...
        agg.w ^ ( -(2 - 2 * p.alpha) / p.alpha) * ...
        k / p.chi * ...
        big_brackets ^ ( -(2 - p.alpha) / p.alpha ) * ...
        ((2 - p.alpha) / 2) ^ ((2 - p.alpha) / p.alpha);
prod(lo_ind) = prod_lo;
prod(hi_ind) = prod_hi;

% capital utilization:
capital_util_lo = (b_draws_lo .* ( agg.P ^ (p.sigma - 1) * agg.Y / (z * pr ^ p.sigma) * ...
        (agg.w * k / (2 * p.chi) * p.alpha / (1 - p.alpha)) ^ (1 - p.alpha) )) .^ (1 / (2 - p.alpha));
capital_util_hi = pr ^ (1 / p.alpha) * ...
        agg.w ^ (- (1 - p.alpha) / p.alpha) * ...
        z ^ (1 / p.alpha) * ...
        k / p.chi * ...
        ((2 - p.alpha) / 2) ^ (1 / p.alpha) * ...
        (p.alpha / (2 - 2 * p.alpha)) ^ ((1 - p.alpha) / (2 - p.alpha)) * ...
        big_brackets ^ (- 1 / p.alpha);
capital_util(lo_ind) = capital_util_lo;
capital_util(hi_ind) = capital_util_hi;
    
% labor
labor = (prod ./ (z .* capital_util .^ p.alpha)) .^ (1 / (1 - p.alpha));

end